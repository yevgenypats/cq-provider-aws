name: Test Policy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test_policy:
    strategy:
      matrix:
        dbversion: [ "postgres:latest" ]
        go: [ "1.17" ]
        platform: [ ubuntu-latest ] # can not run in macOS and windowsOS
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: pass
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -v .

      - name: Download Cloudquery
        run: |
          curl -L https://github.com/cloudquery/cloudquery/releases/latest/download/cloudquery_Linux_x86_64 -o cloudquery
          chmod a+x cloudquery

      - name: Build Schema
        run: |
          rm -rf .cq_reattach
          CQ_PROVIDER_DEBUG=1 go run main.go & while [ ! -f .cq_reattach ]; do sleep 1; done && ./cloudquery provider build_schema --config ./client/testdata/default.hcl --enable-console-log
        env:
          CQ_REATTACH_PROVIDERS: .cq_reattach
          CQ_NO_TELEMETRY: 1

      - name: Policy Run
        run: |
          ./cloudquery policy run --config ./client/testdata/default.hcl --enable-console-log
        env:
          CQ_REATTACH_PROVIDERS: .cq_reattach
          CQ_NO_TELEMETRY: 1
